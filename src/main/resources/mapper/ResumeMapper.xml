<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ea_system.mapper.ResumeMapper">
  <resultMap id="BaseResultMap" type="com.example.ea_system.bean.Resume">
    <id column="resumeId" jdbcType="INTEGER" property="resumeid" />
    <result column="graduateId" jdbcType="INTEGER" property="graduateid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="adjunct" jdbcType="VARCHAR" property="adjunct" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resumeId, graduateId, title, content, adjunct
  </sql>
  <select id="selectByExample" parameterType="com.example.ea_system.bean.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume_info
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resume_info
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.ea_system.bean.ResumeExample">
    delete from resume_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.ea_system.bean.Resume">
    insert into resume_info (resumeId, graduateId, title, 
      content, adjunct)
    values (#{resumeid,jdbcType=INTEGER}, #{graduateid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{adjunct,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.ea_system.bean.Resume">
    insert into resume_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        resumeId,
      </if>
      <if test="graduateid != null">
        graduateId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="adjunct != null">
        adjunct,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        #{resumeid,jdbcType=INTEGER},
      </if>
      <if test="graduateid != null">
        #{graduateid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="adjunct != null">
        #{adjunct,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.ea_system.bean.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume_info
    <set>
      <if test="record.resumeid != null">
        resumeId = #{record.resumeid,jdbcType=INTEGER},
      </if>
      <if test="record.graduateid != null">
        graduateId = #{record.graduateid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.adjunct != null">
        adjunct = #{record.adjunct,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume_info
    set resumeId = #{record.resumeid,jdbcType=INTEGER},
      graduateId = #{record.graduateid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      adjunct = #{record.adjunct,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ea_system.bean.Resume">
    update resume_info
    <set>
      <if test="graduateid != null">
        graduateId = #{graduateid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="adjunct != null">
        adjunct = #{adjunct,jdbcType=VARCHAR},
      </if>
    </set>
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ea_system.bean.Resume">
    update resume_info
    set graduateId = #{graduateid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      adjunct = #{adjunct,jdbcType=VARCHAR}
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
        select * from ea_system.resume_info
    </select>
  <select id="selectByID" resultMap="BaseResultMap">
    select * from ea_system.resume_info where resumeid = #{resumeid}
  </select>
</mapper>